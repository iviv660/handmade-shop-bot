package handlers

import (
	"app/internal/bot/keyboards"
	"app/internal/service"
	"context"
	"fmt"

	"gopkg.in/telebot.v4"
)

type Handlers struct {
	Bot     *telebot.Bot
	Uc      *service.UseCase
	AdminId int64
}

func (h *Handlers) Start(c telebot.Context) error {
	tgID := c.Sender().ID
	username := c.Sender().Username
	_, err := h.Uc.UserRegister(context.TODO(), tgID, username)
	if err != nil {
		return c.Send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	}
	user, err := h.Uc.UserGetByTelegramID(context.TODO(), tgID)
	if err != nil {
		return c.Send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	}
	if user.Role == "user" {
		return c.Send(fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s üëã –Ø –º–∞–≥–∞–∑–∏–Ω-–±–æ—Ç.\n\n–ù–∞–∂–º–∏ ¬´üì¶–ö–∞—Ç–∞–ª–æ–≥¬ª, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã.", user.Username),
			keyboards.CatalogKeyboard(),
		)
	} else {
		return c.Send(fmt.Sprintln("–ü—Ä–∏–≤–µ—Ç –∞–¥–º–∏–Ω üëã"),
			keyboards.AdminKeyboard(),
		)
	}
}
